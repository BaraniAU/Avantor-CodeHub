<?xml version='1.0' encoding='UTF-8'?>
<testcase   name= 'TC_01 To verify the stockroom column ALL Stockroom have hyperlink.ds' description= '' author= 'null' version= ''>
<dpl filename='{ds}/../../Test Data/IMCM_INPUTFILE.csv' exectype='runspecificstep1' errorhandling='' type='HashDPL' locale='en_US'/>
<fallback useFallback='true'/>
<shadowDOM useShadowDOM='true'/>
<step action='include' value='' type='web' desc='' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='"{ds}/../../ReUsable Functions/IMCM Function Library.js"' fallback='true' selected='true'/>
   <accessor type='unknown' value='"REPOSITORY/EV1/IMCM Function Library.js"' fallback='true' selected='false'/>
   <accessor type='unknown' value='"{ds}/../../IMCM Function Library.js"' fallback='true' selected='false'/>
   <accessor type='unknown' value='"{ds}/../IMCM Function Library.js"' fallback='true' selected='false'/>
</dialect>
</step>
<step action='js' value='Login($URL,$NormalUser,$Password,$ConsumptionOrg,$ConsumptionStockroom)' type='web' desc='' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='' fallback='false' selected='true'/>
</dialect>
</step>
<step action='wait' value='500' type='web' desc='' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='' fallback='false' selected='true'/>
</dialect>
</step>
<step action='js' value='NavigateToIntegrationmaintenance()' type='web' desc='' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='' fallback='false' selected='true'/>
</dialect>
</step>
<step action='assertExists' value='' type='web' desc='' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='byXPath(&apos;//*[text()=&quot; ADD NEW INTEGRATION &quot;]&apos;)' fallback='true' selected='true'/>
</dialect>
</step>
<step action='wait' value='500' type='web' desc='' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='' fallback='false' selected='true'/>
</dialect>
</step>
<step action='click' value='' type='web' desc='Click on all stockrooms' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='byXPath(&apos;//*[text()=&quot; All Stockrooms &quot;]&apos;)' fallback='true' selected='true'/>
   <accessor type='unknown' value='link(&quot;All Stockrooms&quot;)' fallback='true' selected='false'/>
</dialect>
</step>
<step action='wait' value='1000' type='web' desc='' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='' fallback='false' selected='true'/>
</dialect>
</step>
<step action='assertExists' value='' type='web' desc='Verify Vendor' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='byXPath(&apos;//label[text()=&quot; Vendor &quot;]&apos;)' fallback='true' selected='true'/>
</dialect>
</step>
<step action='click' value='""' type='web' desc='' isThinkTime='false' isCommented='true' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='XPathText' value='byXPath(&apos;//*[text()=&quot; Output Type  -  &quot;]&apos;)' fallback='true' selected='true'/>
   <accessor type='Text' value='label(&quot;Output Type  -&quot;)' fallback='true' selected='false'/>
   <accessor type='XPath' value='byXPath(&quot;//mat-dialog-container[@id=&apos;mat-dialog-0&apos;]/app-view-details-model/div[2]/div/label&quot;)' fallback='true' selected='false'/>
   <accessor type='AbsoluteXPath' value='byXPath(&apos;/html/body/div[2]/div[2]/div/mat-dialog-container/app-view-details-model/div[2]/div/label&apos;)' fallback='true' selected='false'/>
   <accessor type='RelativeXPath' value='byXPath(&quot;id(&apos;mat-dialog-0&apos;)/app-view-details-model[@class=&apos;ng-star-inserted&apos;]/div[@class=&apos;px-2 mt-2 d-flex justify-content-between align-items-center&apos;]/div[@class=&apos;d-flex align-items-center&apos;]/label[@class=&apos;m-0 text-primary&apos;]&quot;)' fallback='true' selected='false'/>
   <accessor type='JQuery' value='byJQuery(&apos;mat-dialog-container[class=&quot;mat-dialog-container ng-tns-c31-111 ng-trigger ng-trigger-dialogContainer ng-star-inserted&quot;] &gt; app-view-details-model[class=&quot;ng-star-inserted&quot;] &gt; div[class=&quot;px-2 mt-2 d-flex justify-content-between align-items-center&quot;] &gt; div[class=&quot;d-flex align-items-center&quot;] &gt; label[class=&quot;m-0 text-primary&quot;]&apos;)' fallback='true' selected='false'/>
   <accessor type='JQuery' value='byJQuery(&apos;#mat-dialog-0 &gt; .ng-star-inserted &gt; .px-2.mt-2.d-flex.justify-content-between.align-items-center &gt; .d-flex.align-items-center &gt; .m-0.text-primary&apos;)' fallback='true' selected='false'/>
   <accessor type='AttrClass' value='label(&quot;m-0 text-primary[1]&quot;)' fallback='true' selected='false'/>
</dialect>
</step>
<step action='assertExists' value='' type='web' desc='Verify Output type' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='byXPath(&apos;//label[text()=&quot; Output Type  -  &quot;]&apos;)' fallback='true' selected='true'/>
</dialect>
</step>
<step action='wait' value='500' type='web' desc='' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='' fallback='false' selected='true'/>
</dialect>
</step>
<step action='js' value='VerifyRecordsSorting(&quot;Stockrooms&quot;,&quot;111Automation&quot;)' type='web' desc='' isThinkTime='false' isCommented='false' isMasked='false' sequence='0'>
  <dialect type='sahi'>
   <accessor type='unknown' value='' fallback='false' selected='true'/>
</dialect>
</step>
</testcase>